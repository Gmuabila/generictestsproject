package homeofficetestold;

import org.junit.Test;

import java.util.*;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

import static org.junit.Assert.assertEquals;

public class SimpleTest {

    @Test
    public void simpleScenario(){
        Integer[] numbers = {3, 1, 1};
        Integer[] collection = {
                3, 2, 1
        };
        Stack<Integer> numberStack = new Stack<>();
        Collections.addAll(numberStack, collection);

        List<String> resultList = new ArrayList<>();

        Arrays.stream(numbers).forEach(movie -> {
            List<Integer> integerList = numberStack.subList(numberStack.lastIndexOf(movie) + 1, numberStack.size());
            resultList.add(String.valueOf(integerList.size()));
            numberStack.remove(numberStack.lastIndexOf(movie));
            numberStack.push(movie);
        });

        String result = resultList.stream().collect(Collectors.joining(","));
        assertEquals("2,1,0", result);
        System.out.println();
        //expect 2,1,0

    }

    @Test
    public void simpleScenarioWithFive(){
        Integer[] numbers = {24,50,14,27,34,74,71,47,20,52,75,26,21,82,36,48,64,19,82,66,44,45,50,6,86,32,4,9,54,24,64,77,65,69,10,13,57,80,59,68,38,39,8,58,34,35,20,12,54,7,69,3,51,32,9,50,55,4,51,22,27,28,4,6,2,13,18,58,85,68,40,36,21,39,7,46,73,18,49,32,24,23,35,67,54,43,30,22,46,80,35,73,13,39,70,15,51,79,64,49,60,17,76,72,47,75,32,26,6,72,57,22,9,5,2,54,47,31,68,85,17,16,63,21,54,46,35,11,38,5,51,3,13,41,75,60,29,12,85,26,75,47,47,83,44,48,43,82,71,24,80,79,39,56,13,85,7,40,9,44,44,51,39,56,5,19,21,25,22,11,43,10,58,3,85,15,43,41,2,19,64,82,3,16,51,7,6,50,46,14,85,81,65,37,43,61,55,63,78,76,66,34,78,37,28,76,43,62,22,44,72,85,31,74,6,74,73,12,37,24,17,35,19,73,64,53,40,32,29,31,14,8,56,83,36,75,72,70,43,85,20,20,83,42,86,80,29,72,83,57,9,14,6,19,78,69,71,31,6,6,53,11,5,22,7,33,3,70,16,37,68,27,56,56,61,55,50,3,40,46,60,49,51,57,59,43,31,44,73,28,49,40,39,53,53,37,85,47,21,7,83,80,25,53,50,85,13,5,80,53,42,45,7,7,15,65,41,37,14,27,64,62,58,8,29,17,45,19,63,65,25,52,50,42,10,13,40,22,17,33,66,59,77,72,57,83,43,11,33,56,29,3,32,1,10,52,9,54,62,63,24,79,28,74,34,37,78,65,51,1,12,30,51,80,8,21,69,50,23,15,19,51,9,42,43,19,85,51,64,53,28,80,45,47,67,70,76,50,48,40,50,51,69,14,37,76,26,19,31,48,25,42,5,34,83,47,52,74,4,21,40,23,14,76,61,72,59,50,36,20,3,77,63,64,5,13,45,22,31,68,62,55,23,66,2,11,18,45,76,13,66,29,35,71,18,2,57,68,51,6,2,46,82,64,15,78,76,51,14,12,32,75,66,54,46,68,57,63,18,46,68,83,67,8,68,76,9,30,58,60,35,51,11,22,20,25,6,1,75,11,12,21,77,77,66,36,50,36,4,68,82,71,56,62,71,29,51,79,58,14,52,6,64,62,20,83,78,17,83,67,27,8,79,17,77,58,44,40,86,39,13,81,16,69,48,86,11,4,78,69,18,36,66,81,3,77,70,81,7,66,53,33,66,45,41,56,16,76,1,15,21,14,1,36,82,40,27,84,44,10,66,53,45,38,39,40,28,22,34,35,80,78,59,51,36,6,20,43,73,12,50,7,25,50,34,12,82,52,2,31,62,67,83,12,10,27,51,38,41,76,64,26,67,28,76,8,33,1,51,12,12,14,10,29,55,44,32,42,1,33,72,62,6,60,74,15,79,30,44,33,20,21,58,78,49,47,86,73,47,42,84,50,55,8,78,15,43,16,57,43,48,34,19,45,86,84,60,78,27,9,24,38,30,73,30,78,33,21,64,71,62,62,34,22,61,18,28,17,33,76,59,72,24,69,23,15,66,74,6,85,82,29,36,25,7,57,8,39,77,72,15,44,39,40,65,5,57,85,21,81,74,71,59,3,54,81,17,25,60,14,23,55,34,51,80,40,21,1,70,4,64,84,47,8,38,18,12,86,8,24,73,81,9,37,76,54,23,84,78,82,12,7,50,45,57,35,85,69,28,68,72,83,58,25,5,9,34,8,86,41,32,72,35,40,14,16,7,36,14,76,31,17,74,73,61,36,21,51,19,40,33,82,37,82,12};

        List<Integer> collection = new ArrayList<>();
        IntStream.range(1, 86 + 1).forEach(number -> collection.add(number));

        Stack<Integer> numberStack = new Stack<>();
        Collections.reverse(collection);
        numberStack.addAll(collection);

        List<String> resultList = new ArrayList<>();

        Arrays.stream(numbers).forEach(movie -> {
            if(numberStack.lastIndexOf(movie) >= 0) {
                List<Integer> integerList = numberStack.subList(numberStack.lastIndexOf(movie) + 1, numberStack.size());
                resultList.add(String.valueOf(integerList.size()));
                numberStack.remove(numberStack.lastIndexOf(movie));
                numberStack.push(movie);
            }else{
                System.out.println("******** HERE ***************" + movie);
            }
        });

        String result = resultList.stream().collect(Collectors.joining(","));
        assertEquals("23,49,15,27,34,73,71,49,26,53,74,33,30,81,42,53,67,34,4,69,53,54,19,26,85,46,27,31,60,26,13,78,71,74,36,39,66,81,69,75,58,59,43,70,37,59,35,47,19,46,16,45,67,25,24,28,69,27,5,54,45,57,4,32,49,27,55,21,85,26,64,43,44,28,22,68,79,10,70,23,40,61,31,77,30,71,66,26,12,39,7,13,22,16,78,63,30,82,47,19,76,67,81,81,62,61,25,61,36,5,51,22,43,67,39,28,11,72,38,39,16,70,81,39,8,32,31,71,55,14,28,50,33,76,26,28,74,54,18,28,5,22,0,84,65,69,43,68,71,48,45,41,44,80,19,15,51,53,37,14,0,24,8,8,25,71,32,76,40,31,20,67,57,32,17,50,5,33,43,12,50,27,8,41,19,23,47,62,41,75,15,84,70,79,17,82,67,49,84,57,77,72,3,8,69,5,9,84,31,37,60,16,59,80,22,1,65,54,13,48,60,59,34,6,34,84,48,64,59,14,31,76,49,57,72,60,22,68,27,24,76,0,7,84,80,61,15,9,5,70,60,16,30,24,36,78,64,22,5,0,25,58,61,37,50,84,54,25,54,38,72,79,32,0,51,51,55,9,38,55,71,74,58,29,80,39,25,51,46,54,8,11,68,28,0,21,43,72,69,28,39,42,69,8,23,8,70,34,6,5,46,82,10,0,69,65,69,16,46,35,56,62,70,57,53,60,13,52,67,13,23,83,24,19,72,24,30,50,12,50,69,40,83,59,43,34,43,54,8,51,23,49,64,84,18,21,61,79,31,27,68,76,49,71,73,40,66,34,56,15,72,80,3,49,41,52,68,40,82,50,44,8,23,43,33,4,54,5,48,53,23,15,48,55,82,68,76,17,80,51,2,12,20,56,29,7,81,18,65,10,56,22,61,34,49,18,42,37,84,32,20,32,18,17,70,53,55,24,78,77,51,57,48,36,21,61,34,61,28,73,52,73,20,62,82,62,84,10,23,12,6,61,81,79,7,9,66,14,44,79,4,78,83,22,56,62,16,8,34,60,67,82,19,67,12,15,16,30,18,4,4,45,55,62,3,15,62,63,72,80,27,20,31,36,40,54,30,66,23,6,25,49,42,0,26,44,45,1,50,21,35,37,71,44,2,40,20,69,24,37,54,21,41,9,24,33,40,73,2,35,74,36,13,5,24,14,80,56,82,79,49,83,83,69,66,6,36,31,19,5,47,33,35,10,59,17,70,3,81,5,74,80,2,59,81,39,19,53,47,59,46,40,3,17,44,28,34,85,31,82,16,18,17,85,33,9,79,54,74,56,79,33,71,51,19,50,48,81,85,58,58,35,60,2,14,4,27,56,69,72,57,56,57,7,30,33,19,28,41,39,58,80,10,30,4,59,45,40,10,13,0,41,14,60,73,42,72,79,9,10,76,22,34,68,78,50,66,70,12,9,39,52,66,44,85,80,66,44,2,19,56,43,23,29,9,17,46,57,76,2,68,47,81,58,16,13,26,11,44,75,85,46,28,22,1,6,27,26,45,74,34,0,17,59,82,70,47,75,10,48,60,42,18,72,81,32,68,44,45,84,61,50,64,63,64,40,42,68,73,17,14,52,4,69,85,84,9,15,34,74,19,34,25,76,84,5,30,20,44,63,28,53,38,65,73,20,16,63,77,78,45,52,61,32,51,45,68,55,4,44,53,24,54,85,48,28,24,14,54,46,13,44,62,58,39,77,40,52,54,82,49,75,68,41,47,22,39,27,28,75,72,10,15,39,43,68,22,56,3,30,76,48,52,36,62,7,46,48,67,13,63,35,40,1,36", result);
        System.out.println();
        //expect 2,1,0

    }

    @Test
    public void simpleTest(){

        int[] movies = {24,50,14,27,34,74,71,47,20,52,75,26,21,82,36,48,64,19,82,66,44,45,50,6,86,32,4,9,54,24,64,77,65,69,10,13,57,80,59,68,38,39,8,58,34,35,20,12,54,7,69,3,51,32,9,50,55,4,51,22,27,28,4,6,2,13,18,58,85,68,40,36,21,39,7,46,73,18,49,32,24,23,35,67,54,43,30,22,46,80,35,73,13,39,70,15,51,79,64,49,60,17,76,72,47,75,32,26,6,72,57,22,9,5,2,54,47,31,68,85,17,16,63,21,54,46,35,11,38,5,51,3,13,41,75,60,29,12,85,26,75,47,47,83,44,48,43,82,71,24,80,79,39,56,13,85,7,40,9,44,44,51,39,56,5,19,21,25,22,11,43,10,58,3,85,15,43,41,2,19,64,82,3,16,51,7,6,50,46,14,85,81,65,37,43,61,55,63,78,76,66,34,78,37,28,76,43,62,22,44,72,85,31,74,6,74,73,12,37,24,17,35,19,73,64,53,40,32,29,31,14,8,56,83,36,75,72,70,43,85,20,20,83,42,86,80,29,72,83,57,9,14,6,19,78,69,71,31,6,6,53,11,5,22,7,33,3,70,16,37,68,27,56,56,61,55,50,3,40,46,60,49,51,57,59,43,31,44,73,28,49,40,39,53,53,37,85,47,21,7,83,80,25,53,50,85,13,5,80,53,42,45,7,7,15,65,41,37,14,27,64,62,58,8,29,17,45,19,63,65,25,52,50,42,10,13,40,22,17,33,66,59,77,72,57,83,43,11,33,56,29,3,32,1,10,52,9,54,62,63,24,79,28,74,34,37,78,65,51,1,12,30,51,80,8,21,69,50,23,15,19,51,9,42,43,19,85,51,64,53,28,80,45,47,67,70,76,50,48,40,50,51,69,14,37,76,26,19,31,48,25,42,5,34,83,47,52,74,4,21,40,23,14,76,61,72,59,50,36,20,3,77,63,64,5,13,45,22,31,68,62,55,23,66,2,11,18,45,76,13,66,29,35,71,18,2,57,68,51,6,2,46,82,64,15,78,76,51,14,12,32,75,66,54,46,68,57,63,18,46,68,83,67,8,68,76,9,30,58,60,35,51,11,22,20,25,6,1,75,11,12,21,77,77,66,36,50,36,4,68,82,71,56,62,71,29,51,79,58,14,52,6,64,62,20,83,78,17,83,67,27,8,79,17,77,58,44,40,86,39,13,81,16,69,48,86,11,4,78,69,18,36,66,81,3,77,70,81,7,66,53,33,66,45,41,56,16,76,1,15,21,14,1,36,82,40,27,84,44,10,66,53,45,38,39,40,28,22,34,35,80,78,59,51,36,6,20,43,73,12,50,7,25,50,34,12,82,52,2,31,62,67,83,12,10,27,51,38,41,76,64,26,67,28,76,8,33,1,51,12,12,14,10,29,55,44,32,42,1,33,72,62,6,60,74,15,79,30,44,33,20,21,58,78,49,47,86,73,47,42,84,50,55,8,78,15,43,16,57,43,48,34,19,45,86,84,60,78,27,9,24,38,30,73,30,78,33,21,64,71,62,62,34,22,61,18,28,17,33,76,59,72,24,69,23,15,66,74,6,85,82,29,36,25,7,57,8,39,77,72,15,44,39,40,65,5,57,85,21,81,74,71,59,3,54,81,17,25,60,14,23,55,34,51,80,40,21,1,70,4,64,84,47,8,38,18,12,86,8,24,73,81,9,37,76,54,23,84,78,82,12,7,50,45,57,35,85,69,28,68,72,83,58,25,5,9,34,8,86,41,32,72,35,40,14,16,7,36,14,76,31,17,74,73,61,36,21,51,19,40,33,82,37,82,12};
        int m = 86;
        int n = 815;

//        String result = homeofficetestold.Solution.run(n, m, movies);
//        assertEquals("23,49,15,27,34,73,71,49,26,53,74,33,30,81,42,53,67,34,4,69,53,54,19,26,85,46,27,31,60,26,13,78,71,74,36,39,66,81,69,75,58,59,43,70,37,59,35,47,19,46,16,45,67,25,24,28,69,27,5,54,45,57,4,32,49,27,55,21,85,26,64,43,44,28,22,68,79,10,70,23,40,61,31,77,30,71,66,26,12,39,7,13,22,16,78,63,30,82,47,19,76,67,81,81,62,61,25,61,36,5,51,22,43,67,39,28,11,72,38,39,16,70,81,39,8,32,31,71,55,14,28,50,33,76,26,28,74,54,18,28,5,22,0,84,65,69,43,68,71,48,45,41,44,80,19,15,51,53,37,14,0,24,8,8,25,71,32,76,40,31,20,67,57,32,17,50,5,33,43,12,50,27,8,41,19,23,47,62,41,75,15,84,70,79,17,82,67,49,84,57,77,72,3,8,69,5,9,84,31,37,60,16,59,80,22,1,65,54,13,48,60,59,34,6,34,84,48,64,59,14,31,76,49,57,72,60,22,68,27,24,76,0,7,84,80,61,15,9,5,70,60,16,30,24,36,78,64,22,5,0,25,58,61,37,50,84,54,25,54,38,72,79,32,0,51,51,55,9,38,55,71,74,58,29,80,39,25,51,46,54,8,11,68,28,0,21,43,72,69,28,39,42,69,8,23,8,70,34,6,5,46,82,10,0,69,65,69,16,46,35,56,62,70,57,53,60,13,52,67,13,23,83,24,19,72,24,30,50,12,50,69,40,83,59,43,34,43,54,8,51,23,49,64,84,18,21,61,79,31,27,68,76,49,71,73,40,66,34,56,15,72,80,3,49,41,52,68,40,82,50,44,8,23,43,33,4,54,5,48,53,23,15,48,55,82,68,76,17,80,51,2,12,20,56,29,7,81,18,65,10,56,22,61,34,49,18,42,37,84,32,20,32,18,17,70,53,55,24,78,77,51,57,48,36,21,61,34,61,28,73,52,73,20,62,82,62,84,10,23,12,6,61,81,79,7,9,66,14,44,79,4,78,83,22,56,62,16,8,34,60,67,82,19,67,12,15,16,30,18,4,4,45,55,62,3,15,62,63,72,80,27,20,31,36,40,54,30,66,23,6,25,49,42,0,26,44,45,1,50,21,35,37,71,44,2,40,20,69,24,37,54,21,41,9,24,33,40,73,2,35,74,36,13,5,24,14,80,56,82,79,49,83,83,69,66,6,36,31,19,5,47,33,35,10,59,17,70,3,81,5,74,80,2,59,81,39,19,53,47,59,46,40,3,17,44,28,34,85,31,82,16,18,17,85,33,9,79,54,74,56,79,33,71,51,19,50,48,81,85,58,58,35,60,2,14,4,27,56,69,72,57,56,57,7,30,33,19,28,41,39,58,80,10,30,4,59,45,40,10,13,0,41,14,60,73,42,72,79,9,10,76,22,34,68,78,50,66,70,12,9,39,52,66,44,85,80,66,44,2,19,56,43,23,29,9,17,46,57,76,2,68,47,81,58,16,13,26,11,44,75,85,46,28,22,1,6,27,26,45,74,34,0,17,59,82,70,47,75,10,48,60,42,18,72,81,32,68,44,45,84,61,50,64,63,64,40,42,68,73,17,14,52,4,69,85,84,9,15,34,74,19,34,25,76,84,5,30,20,44,63,28,53,38,65,73,20,16,63,77,78,45,52,61,32,51,45,68,55,4,44,53,24,54,85,48,28,24,14,54,46,13,44,62,58,39,77,40,52,54,82,49,75,68,41,47,22,39,27,28,75,72,10,15,39,43,68,22,56,3,30,76,48,52,36,62,7,46,48,67,13,63,35,40,1,36", result);

    }
}

